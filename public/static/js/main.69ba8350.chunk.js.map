{"version":3,"sources":["features/cartSlice.js","components/Logout.js","components/SearchBar.js","components/NavBar.js","components/Signup.js","components/Product.js","components/Home.js","components/Login.js","components/ProductInCart.js","components/Carts.js","features/productDetailSlice.js","components/Review.js","components/FormikReview.js","components/Reviews.js","components/ProductDetail.js","components/Checkout.js","components/OrderHistory.js","components/ForgotPassword.js","components/ResetPassword.js","components/App.js","store.js","index.js"],"names":["fetchCarts","createAsyncThunk","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","userId","wrap","_context","prev","next","abrupt","fetch","concat","then","r","json","data","stop","_x","apply","this","arguments","cartsSlice","createSlice","name","initialState","entities","reducers","cartAdded","state","action","push","payload","cartRemoved","index","findIndex","product","id","splice","cartUpdated","find","quantity","cartCleared","extraReducers","defineProperty","fulfilled","actions","Logout","setUser","history","useHistory","dispatch","useDispatch","useEffect","method","react_default","createElement","SearchBar","setProducts","search","setSearch","debounceSearchChange","useCallback","debounce","e","target","value","Box","component","onSubmit","preventDefault","ok","products","TextField","variant","hiddenLabel","size","color","onChange","NavBar","user","itemsInCarts","useSelector","carts","reduce","previous","current","AppBar","position","Toolbar","Grid","container","item","react_router_dom","to","onClick","Button","justifyContent","sx","display","xs","md","flexGrow","ml","components_SearchBar","marginRight","Signup","onLogin","_useState","useState","username","password","password2","email","_useState2","slicedToArray","formData","setFormData","_useState3","_useState4","errors","setErrors","handleChange","objectSpread","Container","maxWidth","CssBaseline","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography","headers","Content-Type","body","JSON","stringify","password_confirmation","err","toConsumableArray","mt","spacing","autoComplete","required","fullWidth","label","autoFocus","type","mb","length","map","error","key","Link","href","Product","isAddedToCart","setIsAddedToCart","match","useRouteMatch","title","price","description","descriptionShort","description_short","image","rating","handleCartClick","includes","productIdInCarts","productQuantityInCarts","setTimeout","user_id","url","Card","height","CardActionArea","CardHeader","avatar","aria-label","src","alt","subheader","CardMedia","CardContent","Rating","parseFloat","precision","readOnly","paragraph","CardActions","disableSpacing","startIcon","AddShoppingCart_default","width","Home","sm","components_Product","Login","margin","ProductInCart","productInCart","console","log","Cart","totalItems","totalPrice","Fragment","marginBottom","components_ProductInCart","fetchProductDetails","productId","productDetailsSlice","reviewAdded","reviews","reviewRemoved","review","reviewUpdated","content","Review","FormikReview","setIsEditingReview","isEditingReview","isEditing","setIsEditing","formik","useFormik","initialValues","validationSchema","Yup","min","Content-type","parseInt","values","reviewReturned","timestamp","Date","updated_at","toLocaleString","currentUser","fontSize","gutterBottom","overflowWrap","handleSubmit","onBlur","handleBlur","touched","Boolean","helperText","multiline","rows","undefined","Reviews","_useState5","_useState6","productDetails","Box_Box","components_FormikReview","product_id","ProductDetail","params","useParams","direction","alignContent","components_Reviews","Checkout","fullname","street","city","zipcode","_useState7","_useState8","isPlaced","setIsPlaced","total","handleCheckoutSubmit","forEach","cart","postOrder","objectWithoutProperties","deleteCart","cartId","address","minWidth","OrderHistory","orders","setOrders","order","ForgotPassword","setEmail","alerts","setAlerts","htmlFor","alert","ResetPassword","token","theme","createTheme","palette","primary","blue","App","ThemeProvider","Paper","elevation","components_NavBar","react_router","path","components_Signup","components_Logout","components_Login","Carts","components_ProductDetail","components_Checkout","components_OrderHistory","components_ForgotPassword","components_ResetPassword","exact","components_Home","store","configureStore","reducer","cartsReducer","productDetailsReducer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.69ba8350.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// The return value of createAsyncThunk will be the action.payload in the corresponding reducers in the extraReducers.\nexport const fetchCarts = createAsyncThunk(\"carts/fetchCarts\", async (userId) => {\n  return fetch(`/api/users/${userId}/carts`)\n  .then((r) => r.json())\n  .then((data) => data)\n})\n\nconst cartsSlice = createSlice({\n  name: \"carts\",\n  initialState: {\n    entities: []\n  },\n  reducers: {\n    cartAdded(state, action) {\n      state.entities.push(action.payload)\n    },\n    cartRemoved(state, action) {\n      const index = state.entities.findIndex((product) => product.id === action.payload)\n      state.entities.splice(index, 1)\n    },\n    cartUpdated(state, action) {\n      const item = state.entities.find((product) => product.id === action.payload.id)\n      item.quantity = action.payload.quantity\n    },\n    cartCleared(state, action) {\n      state.entities = []\n    }\n  },\n  extraReducers: {\n    [fetchCarts.fulfilled](state, action) {\n      state.entities = action.payload\n    }\n  }\n})\n\nexport const { cartAdded, cartRemoved, cartUpdated, cartCleared } = cartsSlice.actions;\nexport default cartsSlice.reducer;","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { cartCleared } from '../features/cartSlice';\n\nfunction Logout({ setUser }) {\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    fetch(\"/api/logout\", {\n      method: \"DELETE\"\n    })\n    .then(() => {\n      setUser({})\n      dispatch(cartCleared())\n      history.push(\"/\")\n    })\n  }, [])\n\n  return (\n    <div>      \n    </div>\n  );\n}\n\nexport default Logout;","import { Box, TextField } from '@mui/material';\nimport debounce from 'lodash.debounce';\nimport React, { useCallback } from 'react';\n\nfunction SearchBar({ setProducts, search, setSearch }) {\n\n  const debounceSearchChange = useCallback(\n    debounce((e) => setSearch(e.target.value), 1000)\n  , [])  \n\n  function handleSearchChange(e) {\n    debounceSearchChange(e)    \n  }\n\n  function handleSearchSubmit(e) {\n    e.preventDefault()\n    fetch(`/api/search/${search}`)\n    .then((r) => {\n      if(r.ok) {\n        r.json().then((products) => {\n          setProducts(products)\n        })\n      }\n    })\n    // If there is only get \"/search/:search\" route, no get \"/search\" route in the backend, we need the following code to separate search of\n    // \"\" or \" \" from other searches, since the search of \"\" or \" \" will hit \"/search\" instead of \"/search/:search\" route, resulting in\n    // RoutingError.\n\n    // if (search.replace(/\\s/g, \"\") === \"\") {\n    //   fetch(\"/api/products\")\n    //   .then((r) => {\n    //     if (r.ok) {\n    //       r.json().then((products) => onSearch(products))\n    //     } else {\n    //       r.json().then((errors) => console.log(errors))\n    //     }\n    //   })\n    // } else {\n    //   fetch(`api/search/${search}`)\n    //   .then((r) => {\n    //     if (r.ok) {\n    //       r.json().then((products) => onSearch(products))\n    //     } else {\n    //       r.json().then((errors) => console.log(errors))\n    //     }\n    //   })\n    // }\n  }\n\n  return (\n    <Box component=\"form\" onSubmit={handleSearchSubmit}>\n      <TextField variant=\"filled\" hiddenLabel size=\"small\" color=\"secondary\" onChange={handleSearchChange} />\n    </Box>\n  );\n}\n\nexport default SearchBar;","import React, { useEffect } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchCarts } from '../features/cartSlice';\nimport SearchBar from './SearchBar';\nimport { Button, Grid } from '@mui/material';\nimport { AppBar, Toolbar } from \"@mui/material\";\n\nfunction NavBar({ user, setProducts, search, setSearch }) {\n  const carts = useSelector((state) => state.carts.entities)\n  const itemsInCarts = carts.reduce((previous, current) => previous + current.quantity, 0)\n  const dispatch = useDispatch()\n\n  // Since setUser in the App component is async, it will return user at a later time. Thus userId will be null the first time.\n  // Thus the return data from server will be null since the url containing userId will be invalid, that will cause null.reduce, \n  // which is an error. So I add an if statement to only run the code within useEffect if the userId exists.\n  // After the user data comes back, setUser will re-render components, this time useId exists, but in order to let code within useEffect\n  // run the second time, the dependency array need to be the data that changes, in this case, userId, instead of []\n  useEffect(() => {\n    if (user.id) {\n      dispatch(fetchCarts(user.id))\n    }    \n  }, [user.id])\n\n  function handleHomeClick() {\n    setSearch(\"\")\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\" >\n        <Toolbar >\n          <Grid container>\n\n            <Grid item >\n              <NavLink to=\"/\" onClick={handleHomeClick}>\n                <Button color=\"secondary\">\n                  Home\n                </Button>             \n              </NavLink>\n            </Grid>\n            \n            <Grid justifyContent=\"flex-start\" sx={{ display: { xs: \"none\", md: \"flex\" }, flexGrow: 1, ml: 3 }} >\n              <SearchBar setProducts={setProducts} search={search} setSearch={setSearch} />\n            </Grid>\n\n            <Grid item sx={{marginRight: 1}} >\n              <NavLink to=\"/orders\">\n                <Button color=\"secondary\">\n                  Order History\n                </Button>\n              </NavLink> \n            </Grid>\n\n            <Grid item sx={{marginRight: 1}} >\n              <NavLink to=\"/carts\">\n                <Button color=\"secondary\">\n                  Cart: {itemsInCarts}\n                </Button>\n              </NavLink>\n            </Grid>\n\n            <Grid item >\n              {user.id ? \n              <div>\n                Hello, <strong>{user.name}</strong>\n                <NavLink to=\"/logout\">\n                  <Button color=\"secondary\">\n                    Logout\n                  </Button>\n                </NavLink>\n              </div> : \n              <div>\n                Hello, <strong>guest</strong>\n                <NavLink to=\"/login\">\n                  <Button color=\"secondary\">\n                    Login\n                  </Button>\n                </NavLink>\n                <NavLink to=\"/signup\">\n                  <Button color=\"secondary\">\n                    Signup\n                  </Button>\n                </NavLink><br/>\n              </div>}  \n            </Grid>\n\n          </Grid> \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default NavBar;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nfunction Signup({ onLogin }) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    password2: \"\",\n    name: \"\",\n    email: \"\"\n  })\n  const [errors, setErrors] = useState([])\n\n  const history = useHistory()\n\n  function handleChange(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault()\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: formData.username,\n        password: formData.password,\n        password_confirmation: formData.password2,\n        name: formData.name,\n        email: formData.email\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user)\n          history.push(\"/\")\n          setFormData({\n            username: \"\",\n            password: \"\",\n            password2: \"\",\n            name: \"\",\n            email: \"\" \n          })\n          setErrors([])\n        })\n      } else {\n        r.json().then((err) => setErrors([...err.errors]))\n      }\n    })\n  }\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  autoFocus\n                  value={formData.name}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  value={formData.username}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n              </Grid>\n              <Grid item xs={12} sx={{mb: 2}}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password2\"\n                  label=\"Comfirm password\"\n                  type=\"password\"\n                  id=\"password2\"\n                  autoComplete=\"confirm-password\"\n                  value={formData.password2}\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            {errors.length !== 0 \n            ?\n            errors.map((error) => {\n              return (\n                <Typography color=\"red\" key={error}>{error}</Typography>\n              )              \n            })\n            : null}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item sx={{mb: 4}}>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>    \n    </div>\n  );\n}\n\nexport default Signup;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { cartAdded, cartUpdated } from '../features/cartSlice';\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Avatar, Typography, Rating, CardActionArea, Button } from '@mui/material';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n\nfunction Product({ product, user }) {\n  const [isAddedToCart, setIsAddedToCart] = useState(false)\n  const match = useRouteMatch()\n  const dispatch = useDispatch()\n  const { id, title, price, description, description_short: descriptionShort, image, rating } = product\n  const carts = useSelector((state) => state.carts.entities)\n  const [errors, setErrors] = useState([])\n\n  function handleCartClick() {\n    const productTitlesInCarts = carts.map((item) => item.title)\n    \n    if (productTitlesInCarts.includes(product.title)) {\n      const productIdInCarts = carts.find((item) => item.title === product.title).id\n      const productQuantityInCarts = carts.find((item) => item.title === product.title).quantity\n      fetch(`/api/carts/${productIdInCarts}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          quantity: productQuantityInCarts + 1\n        })\n      })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((data) => {\n            dispatch(cartUpdated(data))\n            setIsAddedToCart((isAddedToCart) => !isAddedToCart)\n            setTimeout(() => {\n              setIsAddedToCart((isAddedToCart) => !isAddedToCart)\n            }, 2000)\n          })\n        } else {\n          r.json().then((err) => {\n            setErrors([...err.errors])\n            setTimeout(() => {\n              setErrors([])\n            }, 2000)\n          })\n        }\n      })\n    } else {\n      fetch(\"/api/carts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: user.id,\n          quantity: 1,\n          title,\n          price,\n          description,\n          image\n        })\n      })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((data) => {\n            dispatch(cartAdded(data))\n            setIsAddedToCart((isAddedToCart) => !isAddedToCart)\n            setTimeout(() => {\n              setIsAddedToCart((isAddedToCart) => !isAddedToCart)\n            }, 2000)\n          })\n        } else {\n          r.json().then((err) => {\n            setErrors([...err.errors])\n            setTimeout(() => {\n              setErrors([])\n            }, 2000)\n          })\n        }\n      })\n    }    \n  }\n\n  return (\n    <div>\n      {match.url === \"/\" \n      ?\n      <Card sx={{ height: 650 }} variant=\"outlined\">\n        <CardActionArea >        \n          <Link to={`products/${id}`}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"recipe\">\n                  <img src={image} alt={title} />\n                </Avatar>\n              }        \n              title={title}\n              subheader={\n                  <strong>Price: ${price}</strong>\n              }\n            />\n            <CardMedia\n              component=\"img\"\n              height=\"300\"\n              image={image}\n              alt={title}\n            />\n          </Link>\n        </CardActionArea>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            <Rating name=\"half-rating-read\" value={parseFloat(rating)} precision={0.5} readOnly /><br/>\n          </Typography>\n          <Typography sx={{mt: 2}} variant=\"h6\">About this item:</Typography>\n          <Typography paragraph>{descriptionShort}</Typography>\n          {isAddedToCart \n            ?\n            <Typography color=\"secondary\" sx={{mt: 1}}>The item has been added to cart.</Typography>\n            : null}\n          {errors.length !== 0 \n            ?\n            errors.map((error) => {\n              return (\n                <Typography color=\"red\" sx={{mt: 1}}>{error}</Typography>\n              )\n            })            \n            : null} \n        </CardContent>\n        <CardActions disableSpacing>\n          <Button variant=\"contained\" startIcon={<AddShoppingCartIcon />} onClick={handleCartClick}>Add to cart</Button>       \n        </CardActions>          \n      </Card>\n      : \n      <div>\n        <Card sx={{ width: 500}}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\">\n                <img src={image} alt={title} />\n              </Avatar>\n            }        \n            title={title}\n            subheader={\n                <strong>Price: ${price}</strong>\n            }\n          />\n          <CardMedia\n            component=\"img\"\n            height=\"300\"\n            image={image}\n            alt={title}\n          />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            <Rating name=\"half-rating-read\" value={parseFloat(rating)} precision={0.5} readOnly /><br/>         \n          </Typography>\n          <Typography sx={{mt: 2}} variant=\"h6\">About this item:</Typography>\n          <Typography paragraph>{description}</Typography>\n          {isAddedToCart \n            ?\n            <Typography color=\"secondary\" sx={{mt: 1}}>The item has been added to cart.</Typography>\n            : null}\n            {errors.length !== 0 \n            ?\n            errors.map((error) => {\n              return (\n                <Typography color=\"red\" sx={{mt: 1}}>{error}</Typography>\n              )\n            })            \n            : null}\n        </CardContent>\n        <CardActions disableSpacing>       \n          <Button variant=\"contained\" startIcon={<AddShoppingCartIcon />} onClick={handleCartClick}>Add to cart</Button>\n        </CardActions>          \n      </Card>\n      </div>}           \n    </div>    \n  );\n}\nexport default Product;","import { Grid } from '@mui/material';\nimport React from 'react';\nimport Product from './Product';\n\nfunction Home({ products, user }) {\n\n  return (\n    <div>\n      <Grid container >\n        <Grid item xs={0} md={1} />\n        <Grid item container xs={12} md={10} spacing={4}>\n          {products.map((product) => {\n            return(\n              <Grid key={product.id} item xs={12} sm={6} md={4}>\n                <Product  product={product} user={user} />\n              </Grid>            \n            )\n          })}  \n        </Grid>        \n        <Grid item xs={0} md={1} /> \n      </Grid>         \n    </div>\n  );\n}\nexport default Home;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nfunction Login({ onLogin }) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  })\n  const [errors, setErrors] = useState([])\n  const history = useHistory()\n\n  function handleChange(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  function handleLoginSubmit(e) {\n    e.preventDefault()\n    fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: formData.username,\n        password: formData.password\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((user) => {\n          onLogin(user)\n          history.push(\"/\")\n          setFormData({\n            username: \"\",\n            password: \"\"\n          })\n          setErrors([])\n        })\n      } else {\n        r.json().then((err) => setErrors([...err.errors]))\n      }\n    })\n  }\n\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleLoginSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={formData.username}\n              onChange={handleChange}\n            />\n            <TextField\n              sx={{mb: 2}}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={formData.password}\n              onChange={handleChange}\n            />\n            {errors.length !== 0 \n            ?\n            errors.map((error) => {\n              return (\n                <Typography color=\"red\" key={error}>{error}</Typography>\n              )\n            })\n            : null}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container justifyContent=\"space-between\">\n              <Grid item sx={{mb: 4}}>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n              <Grid item sx={{mb: 4}}>\n                <Link href=\"/forgot_password\" variant=\"body2\">\n                  {\"Forgot your password?\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n      \n    </div>\n  );\n}\n\nexport default Login;","import { Button } from '@mui/material';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { cartRemoved, cartUpdated } from '../features/cartSlice';\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, Avatar, Typography, Rating } from '@mui/material';\n\nfunction ProductInCart({ productInCart }) {\n  const dispatch = useDispatch()\n\n  function handleMinusCartClick() {\n    fetch(`/api/carts/${productInCart.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        quantity: productInCart.quantity - 1\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((data) => dispatch(cartUpdated(data)))\n      } else {\n        r.json().then((errors) => console.log(errors))\n      }\n    })\n  }\n\n  function handleRemoveCartClick() {\n    fetch(`/api/carts/${productInCart.id}`, {\n      method: \"DELETE\"\n    })\n    .then((r) => {\n      if (r.ok) {\n        dispatch(cartRemoved(productInCart.id))\n      } else {\n        r.json().then((errors) => console.log(errors))\n      }\n    })\n  }\n\n  function handleAddCartClick() {\n    fetch(`/api/carts/${productInCart.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        quantity: productInCart.quantity + 1\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((data) => dispatch(cartUpdated(data)))\n      } else {\n        r.json().then((errors) => console.log(errors))\n      }\n    })\n  }\n\n  return (        \n    <div>\n      <Card sx={{ maxWidth: 500, height: 600, mb: 2 }}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\">\n              <img src={productInCart.image} alt={productInCart.title} />\n            </Avatar>\n          }        \n          title={productInCart.title}\n          subheader={\n              <strong>Price: ${productInCart.price}</strong>\n          }\n        />\n        <CardMedia\n          component=\"img\"\n          height=\"300\"\n          image={productInCart.image}\n          alt={productInCart.title}\n        />\n      <CardContent>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          <Rating name=\"half-rating-read\" value={parseFloat(productInCart.rating)} precision={0.5} readOnly />\n          <p>Items: {productInCart.quantity}</p>\n          <p>Price: {productInCart.price * productInCart.quantity}</p>\n        </Typography>\n      </CardContent>\n\n      <CardActions >\n      {productInCart.quantity > 1 \n      ? <Button variant=\"contained\" onClick={handleMinusCartClick}>-</Button> \n      : <Button variant=\"contained\" onClick={handleRemoveCartClick}>Remove from cart</Button>\n      }\n        <Button variant=\"contained\" onClick={handleAddCartClick}>+</Button>                 \n      </CardActions>          \n      </Card>\n    </div>             \n  );\n}\n\nexport default ProductInCart;","import { Box, Button, Typography } from '@mui/material';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ProductInCart from \"./ProductInCart\";\n\nfunction Cart() {\n  const carts = useSelector((state) => state.carts.entities)\n  // To use reduce on an array of objects, the first argument cannot be the first element in the array, since it will later be used as previous\n  // value, and that value cannot have keys of the containing object. So, you need to pass in a initial value of 0, to make the previous equal\n  // to 0, and the second argument, current will start at index 0, and you can use dot notation to access the value in the object.\n  const totalItems = carts.reduce((previous, current) => previous + current.quantity, 0)\n  const totalPrice = carts.reduce((previous, current) => previous + current.price * current.quantity, 0)\n\n\n  return (\n    <Box sx={{ml: 5}}>\n      {totalPrice > 0 \n      ?\n      <>     \n        <Link to=\"/checkout\">\n          <Button variant=\"contained\" color=\"secondary\" sx={{marginBottom: 4}}>\n            Checkout\n          </Button>\n        </Link> \n        <Typography variant=\"h4\">Total items: {totalItems}</Typography> \n        <Typography sx={{mb: 2}} variant=\"h4\">Total price: ${totalPrice}</Typography> \n        \n        {carts.map((productInCart) => {\n          return (\n            <ProductInCart key={productInCart.id} productInCart={productInCart} />\n          )\n        })}\n      </> \n      :\n      <Typography variant=\"h4\" sx={{mb:4}}>\n        There is nothing in the cart.\n      </Typography>}\n         \n      </Box>\n  );\n}\n\nexport default Cart;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchProductDetails = createAsyncThunk(\"productDetails/fetchProductDetails\", async (productId) => {\n  return fetch(`/api/products/${productId}`)\n  .then((r) => r.json())\n  .then((data) => data)\n})\n\nconst productDetailsSlice = createSlice({\n  name: \"productDetails\",\n  initialState: {\n    entities: {}\n  },\n  reducers: {\n    reviewAdded(state, action) {\n      state.entities.reviews.push(action.payload)\n    },\n    reviewRemoved(state, action) {\n      const index = state.entities.reviews.findIndex((review) => review.id === action.payload)\n      state.entities.reviews.splice(index, 1)\n    },\n    reviewUpdated(state, action) {\n      const review = state.entities.reviews.find((item) => item.id === action.payload.id)\n      review.content = action.payload.content\n      review.rating = action.payload.rating\n    }\n  },\n  extraReducers: {\n    [fetchProductDetails.fulfilled](state, action) {\n      state.entities = action.payload \n    } \n  }\n})\n\nexport const { reviewAdded, reviewRemoved, reviewUpdated } = productDetailsSlice.actions;\nexport default productDetailsSlice.reducer;","import { Grid, Rating, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { reviewRemoved, reviewUpdated } from '../features/productDetailSlice';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nfunction Review({ review, userId, isEditingReview, setIsEditingReview }) {\n  const [isEditing, setIsEditing] = useState(false)\n  const [formData, setFormData] = useState({\n    rating: review.rating,\n    content: review.content\n  })\n\n  const timestamp = new Date(review.updated_at).toLocaleString();\n  const currentUser = userId === review.user_id\n  const dispatch = useDispatch()\n\n  function handleEditClick() {\n    setIsEditing((isEditing) => !isEditing)\n    setIsEditingReview(isEditingReview => !isEditingReview)\n  }\n\n  function handleChange(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  function handleReviewSubmit(e) {\n    e.preventDefault()\n    fetch(`/api/reviews/${review.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        rating: parseInt(formData.rating),\n        content: formData.content\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((reviewReturned) => dispatch(reviewUpdated(reviewReturned)))\n        setIsEditing((isEditing) => !isEditing)\n      }\n    })\n  }\n\n  function handleDeleteClick() {\n    fetch(`/api/reviews/${review.id}`, {\n      method: \"DELETE\"\n    })\n    .then((r) => {\n      if (r.ok) {\n        dispatch(reviewRemoved(review.id))\n      }\n    })\n  }\n\n  return (\n    <>    \n      <Card sx={{ width: 500 }} variant=\"outlined\">\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            {review.name}         \n          </Typography>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>      \n            <Rating name=\"half-rating-read\" size=\"small\" value={parseFloat(review.rating)} precision={0.5} readOnly />\n          </Typography>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>      \n            {timestamp}\n          </Typography>        \n          <Typography sx={{overflowWrap: \"break-word\"}}>\n            {review.content}          \n          </Typography>      \n        </CardContent>\n        <CardActions>\n          {currentUser ? \n          <div>\n            <Button onClick={handleEditClick}>Edit</Button>\n            <Button onClick={handleDeleteClick}>Delete</Button>\n          </div>\n          : null}\n        </CardActions>\n      </Card>\n      {isEditing ? \n      <>\n        <TextField\n        sx={{width: 500, mt: 3}} \n        id=\"review_content\" \n        name=\"content\" \n        autoFocus\n        value={formData.content} \n        onChange={handleChange} \n        variant=\"outlined\"\n        label=\"Enter your review...\"\n        multiline\n        rows={5} />\n        <Grid container>\n          <Grid item sx={{mt: 2, flexGrow: 1}}>\n            <Rating\n            name=\"rating\"\n            value={parseInt(formData.rating)}\n            onChange={(handleChange)}\n            />  \n          </Grid>\n          <Grid item sx={{mt: 2}}>\n            <Button variant=\"outlined\" type=\"submit\" onClick={handleReviewSubmit}>Submit your review</Button>\n          </Grid>\n        </Grid>   \n      </>            \n      : null}   \n      </>     \n  );\n}\n\nexport default Review;","import { formControlClasses, Grid, Rating, TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { reviewRemoved, reviewUpdated } from '../features/productDetailSlice';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction FormikReview({ review, userId, isEditingReview, setIsEditingReview }) {\n  const [isEditing, setIsEditing] = useState(false)\n\n  const formik = useFormik({\n    initialValues: {\n      rating: review.rating,\n      content: review.content\n    },\n    validationSchema: Yup.object({\n      rating: Yup.string()\n        .required('Required'),\n      content: Yup.string()\n        .min(10, 'Must be 10 characters or more')\n        .required('Content is required'),\n    }),\n    onSubmit: () => {\n      fetch(`/api/reviews/${review.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rating: parseInt(formik.values.rating),\n          content: formik.values.content\n        })\n      })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((reviewReturned) => dispatch(reviewUpdated(reviewReturned)))\n          setIsEditing((isEditing) => !isEditing)\n        }\n      })\n    },\n  });\n\n  const timestamp = new Date(review.updated_at).toLocaleString();\n  const currentUser = userId === review.user_id\n  const dispatch = useDispatch()\n\n  function handleEditClick() {\n    setIsEditing((isEditing) => !isEditing)\n    setIsEditingReview(isEditingReview => !isEditingReview)\n  }\n\n\n  function handleDeleteClick() {\n    fetch(`/api/reviews/${review.id}`, {\n      method: \"DELETE\"\n    })\n    .then((r) => {\n      if (r.ok) {\n        dispatch(reviewRemoved(review.id))\n      }\n    })\n  }\n\n  return (\n    <>    \n      <Card sx={{ width: 500 }} variant=\"outlined\">\n        <CardContent>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            {review.name}         \n          </Typography>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>      \n            <Rating name=\"half-rating-read\" size=\"small\" value={parseFloat(review.rating)} precision={0.5} readOnly />\n          </Typography>\n          <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>      \n            {timestamp}\n          </Typography>        \n          <Typography sx={{overflowWrap: \"break-word\"}}>\n            {review.content}          \n          </Typography>      \n        </CardContent>\n        <CardActions>\n          {currentUser ? \n          <div>\n            <Button onClick={handleEditClick}>Edit</Button>\n            <Button onClick={handleDeleteClick}>Delete</Button>\n          </div>\n          : null}\n        </CardActions>\n      </Card>\n      {isEditing ? \n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          sx={{width: 500, mt: 3}} \n          id=\"content\" \n          name=\"content\" \n          autoFocus\n          value={formik.values.content} \n          onChange={formik.handleChange} \n          onBlur={formik.handleBlur}\n          error={formik.touched.content && Boolean(formik.errors.content)}\n          helperText={formik.touched.content && formik.errors.content}\n          variant=\"outlined\"\n          label=\"Enter your review...\"\n          multiline\n          rows={5}\n        />\n        <Grid container>\n          <Grid item sx={{mt: 2, flexGrow: 1}}>\n            <Rating\n              id=\"rating\"\n              name=\"rating\"\n              error={formik.touched.rating && Boolean(formik.errors.rating) ? true : undefined}\n              value={parseInt(formik.values.rating)}\n              onChange={formik.handleChange}\n            />  \n          </Grid>\n          <Grid item sx={{mt: 2}}>\n            <Button variant=\"outlined\" type=\"submit\">Submit your review</Button>\n          </Grid>\n        </Grid>   \n      </form>            \n      : null}   \n      </>     \n  );\n}\n\nexport default FormikReview;","import React, { useState } from 'react';\nimport Review from \"./Review\";\nimport { reviewAdded } from \"../features/productDetailSlice\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Grid, Rating, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport FormikReview from './FormikReview';\n\nfunction Reviews({ userId }) {\n  const [isEditingReview, setIsEditingReview] = useState(false)\n  const [formData, setFormData] = useState({\n    rating: \"\",\n    content: \"\"\n  })\n  const [errors, setErrors] = useState([])\n  const dispatch = useDispatch()\n  const productDetails = useSelector((state) => state.productDetails.entities)\n\n  function handleChange(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  function handleReviewSubmit(e) {\n    e.preventDefault()\n    fetch(\"/api/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        product_id: productDetails.id,\n        rating: parseInt(formData.rating),\n        content: formData.content\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((review) => {\n          dispatch(reviewAdded(review))\n          setFormData({\n            rating: \"\",\n            content: \"\"\n          })\n          setErrors([])\n        })\n      } else {\n        r.json().then((err) => setErrors([...err.errors]))\n      }      \n    })\n  }\n\n  return (\n      <Box>\n        <Typography variant=\"h4\" >\n          Reviews\n        </Typography>\n        {productDetails.reviews.map((review) => {\n          return (\n            // <Review key={review.id} review={review} userId={userId} setIsEditingReview={setIsEditingReview} />\n            <FormikReview key={review.id} review={review} userId={userId} setIsEditingReview={setIsEditingReview} isEditingReview={isEditingReview} />\n          )\n        })}\n        <Button sx={{mt: 3}} onClick={() => setIsEditingReview((isEditingReview) => !isEditingReview)}>\n          {isEditingReview ? \"Cancel\" : \"Start a new review?\"}\n        </Button><br/>\n        {isEditingReview\n        ?\n        <>\n          <TextField \n            sx={{width: 500, mt: 3, mb: 2}} \n            id=\"review_content\" \n            name=\"content\" \n            autoFocus\n            value={formData.content} \n            onChange={handleChange} \n            variant=\"outlined\"\n            label=\"Enter your review...\"\n            multiline\n            rows={5}/><br/>\n          {errors.length !== 0 \n          ?\n          errors.map((error) => {\n            return (\n              <Typography color=\"red\">{error}</Typography>\n            )\n          })\n          : null}\n          <Grid container>\n            <Grid item sx={{mt: 2, flexGrow: 1}}>\n              <Rating\n              name=\"rating\"\n              value={parseInt(formData.rating)}\n              onChange={(handleChange)}\n              />  \n            </Grid>            \n            <Grid item sx={{mt: 2}}>\n              <Button variant=\"outlined\" type=\"submit\" onClick={handleReviewSubmit}>Submit your review</Button>\n            </Grid>\n          </Grid>          \n        </>          \n        :null}        \n      </Box>\n  );\n}\n\nexport default Reviews;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Product from \"./Product\";\nimport { fetchProductDetails } from '../features/productDetailSlice';\nimport Reviews from \"./Reviews\";\nimport { Grid } from '@mui/material';\n\nfunction ProductDetail({ user, products }) {\n  const params = useParams()\n  const productDetails = useSelector((state) => state.productDetails.entities)\n  const dispatch = useDispatch()\n\n  // Product will first be undefined, and this will cause error if the Product want to access the id attribute of undefine, so the following\n  // code sets product to be {} if the left part of || is undefine, and for unknown reason, access the id attribute of {} will not throw an\n  // error. The reason to pass product as prop to Product instead of productDetails is that the rating comes from backend where it pulls the\n  // average rating of all the reviews for a product, and thus the rating attribute in productDetails will not update unless you re-fetch the\n  // data from backend, causing the rating not updated after submitting or editing an review. \n  // \n  // The App component will re-fetch the products which will have the latest data for rating, by doing so, the rating on the ProductDetail page\n  // will update automatically.\n  // The reason why I do not re-fetch the productDetail from the server is that, I cannot find a dependency array to let the useEffect to \n  // re-run, I tried putting products and productDetails as dependency array, but it will cause the frontend into a loop to endlessly fetch\n  // data.\n\n  const product = products.find((product) => product.id === parseInt(params.productId)) || {}\n\n\n  useEffect(() => {\n    dispatch(fetchProductDetails(params.productId))\n  }, [])\n\n  return (\n    <div>\n      <Grid container direction=\"column\" spacing={4} alignContent=\"center\">\n        \n        <Grid item justifyContent=\"center\" >\n          <Product product={product} user={user} />\n        </Grid>\n        \n        <Grid item sx={{mb:4}} >\n          {productDetails.reviews \n          ?\n          <Reviews userId={user.id} />\n          : null}\n        </Grid> \n            \n        \n      </Grid>      \n    </div>\n  );\n}\n\nexport default ProductDetail;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { cartRemoved } from '../features/cartSlice';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Container, Grid, TextField } from '@mui/material';\n\nfunction Checkout({ userId }) {\n  const [formData, setFormData] = useState({\n    id: \"\",\n    fullname: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\"\n  })\n\n  const[errors, setErrors] = useState([])\n\n  const [isEditing, setIsEditing] = useState(formData.fullname === \"\")\n  const [isPlaced, setIsPlaced] = useState(true)  \n  const carts = useSelector((state) => state.carts.entities)\n  const total = carts.reduce((previous, current) => previous + current.price * current.quantity, 0)\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (userId) {\n      fetch(`/api/users/${userId}/addresses`)\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((address) => {\n            if (address !== null) {\n              setFormData(address)\n              setIsEditing(false)\n            }          \n          })\n        }\n      })\n    }    \n  }, [userId])\n\n  function handleChange(e) {\n    setFormData({...formData, [e.target.name]: e.target.value})\n  }\n\n  function handleEditAddressClick() {\n    setIsEditing((isEditing) => !isEditing)\n  }\n\n  function handleCheckoutSubmit(e) {\n    e.preventDefault()\n    if (formData.id === \"\") {\n      fetch(\"/api/addresses\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...formData, user_id: userId\n        })\n      })\n      .then((r) => {\n        if (r.ok) {\n          carts.forEach((cart) => {\n            const {id, ...cartNoId} = cart\n            postOrder(cartNoId)\n            deleteCart(cart.id)            \n            })\n          setIsPlaced((isPlaced) => !isPlaced)\n          setErrors([])\n        } else {\n          r.json().then((err) => setErrors([...err.errors]))\n        }\n      })      \n    } else {\n      fetch(`/api/addresses/${formData.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({...formData, user_id: userId})\n      })\n      .then((r) => {\n        if (r.ok) {\n          carts.forEach((cart) => {\n            const {id, ...cartNoId} = cart\n            postOrder(cartNoId)\n            deleteCart(cart.id)            \n            })\n          setIsPlaced((isPlaced) => !isPlaced)\n          setErrors([])\n        } else {\n          r.json().then((err) => setErrors([...err.errors]))\n        }\n      })        \n    }    \n  }\n\n  function postOrder(cart) {\n    fetch(\"/api/orders\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(cart)\n    })\n  }\n\n  function deleteCart(cartId) {\n    fetch(`/api/carts/${cartId}`, {\n      method: \"DELETE\"\n    })\n    .then(() => dispatch(cartRemoved(cartId))) \n  }  \n\n  return (\n    <div>\n      {isPlaced\n      ?\n      <div>\n        {isEditing\n        ?\n        <Container component=\"main\" maxWidth=\"sm\">        \n          <Box component=\"form\" onSubmit={handleCheckoutSubmit} sx={{ mt: 3 }}>        \n            <Grid container spacing={4}>\n              <Grid item xs={12}>\n                <TextField\n                id=\"fullname\" fullWidth name=\"street\" value={formData.street} onChange={handleChange} variant=\"outlined\"label=\"Street\" />            \n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                id=\"fullname\" fullWidth name=\"fullname\" value={formData.fullname} onChange={handleChange} variant=\"outlined\"label=\"Fullname\" />\n              </Grid>            \n              <Grid item xs={12} sm={6}>\n                <TextField\n                id=\"fullname\" fullWidth name=\"city\" value={formData.city} onChange={handleChange} variant=\"outlined\"label=\"City\" />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                id=\"fullname\" fullWidth name=\"state\" value={formData.state} onChange={handleChange} variant=\"outlined\"label=\"State\" />\n              </Grid>\n              <Grid item sx={{mb: 2}} xs={12} sm={6}>\n                <TextField\n                id=\"fullname\" fullWidth name=\"zipcode\" value={formData.zipcode} onChange={handleChange} variant=\"outlined\"label=\"Zipcode\" />\n              </Grid>\n              {errors.length !== 0 \n              ?\n              <Grid container direction=\"column\">\n              {errors.map((error) => {\n                return (                  \n                  <Typography sx={{ml: 4, mt: 3}} key={error} color=\"red\">{error}</Typography>                                                    \n                )\n              })}\n              </Grid>\n              : null}      \n              <Button fullWidth sx={{ml: 4, mt: 3, mb: 2}} type=\"submit\" variant=\"contained\">Place your order</Button>\n            </Grid>\n          </Box>\n        </Container>         \n        :\n        <Card sx={{ minWidth: 275 }}>\n          <CardContent>         \n            <Typography variant=\"h5\" gutterBottom>\n              <p>Total price: {total}</p>\n              <p>Name: {formData.fullname}</p>\n              <p>Street: {formData.street}</p>\n              <p>City: {formData.city}</p>\n              <p>State: {formData.state}</p>\n              <p>Zip code: {formData.zipcode}</p>\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" onClick={handleCheckoutSubmit}>Place your order</Button>\n            <Button variant=\"contained\" onClick={handleEditAddressClick}>Edit address</Button> \n          </CardActions>\n        </Card>}  \n      </div>\n      :\n      <div>\n        <Typography variant=\"h5\" sx={{mb: 3}}>We have received your order, you will be notified when the order is dispatched, thank you for being our customer!</Typography>\n        <Button sx={{mb: 3}} variant=\"outlined\" onClick={() => history.push(\"/\")}>Keep shopping?</Button>\n      </div>\n      }    \n    </div>\n  );\n}\n\nexport default Checkout;","import React, { useEffect, useState } from 'react';\nimport { Card, CardHeader, CardMedia, Avatar, Typography, Grid } from '@mui/material';\n\nfunction OrderHistory({ user }) {\n  const [orders, setOrders] = useState([])\n\n  useEffect(() => {\n    if (user.id) {\n      fetch(`/api/users/${user.id}/orders`)\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((orders) => setOrders(orders))\n        }\n      })\n    }    \n  }, [user.id])\n\n  return (\n    <div>\n      {orders.length !== 0\n      ?\n      <Grid container sx={{mb: 10}}>\n        <Grid item xs={0} sm={1} />\n        <Grid item container xs={12} sm={10} spacing={12}>        \n          {orders.map((order) => {\n            return (\n              <Grid key={order.id} item xs={12} sm={4} >\n                  <Card sx={{ maxWidth: 500, height: 600 }}>\n                    <CardHeader\n                      avatar={\n                        <Avatar aria-label=\"recipe\">\n                          <img src={order.image} alt={order.title} />\n                        </Avatar>\n                      }        \n                      title={order.title}\n                      subheader={\n                        <>\n                          <strong>Price: ${order.price}</strong><br/>\n                          <strong>Quantity: {order.quantity}</strong>\n                        </>                          \n                      }\n                    />\n                    <CardMedia\n                      component=\"img\"\n                      height=\"500\"\n                      image={order.image}\n                      alt={order.title}\n                    />\n                  </Card>\n              </Grid>              \n            )\n          })} \n        </Grid>\n        <Grid item xs={0} sm={1} />       \n      </Grid>      \n      :\n      <Typography variant=\"h4\" sx={{mb:4}}>\n        There is nothing here.\n      </Typography>}  \n    </div>\n  )\n}\n\nexport default OrderHistory;","import React, { useState } from 'react'\n\nfunction ForgotPassword() {\n  const [email, setEmail] = useState(\"\")\n  const [alerts, setAlerts] = useState([])\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    fetch(\"/api/forgot\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({email: email})\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((data) => setAlerts(data.alerts))\n      } else {\n        r.json().then((data) => setAlerts(data.errors))\n      }\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"forgot-password-email\">Please enter your email:</label>\n        <input type=\"email\" id=\"forgot-password-email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {alerts.map((alert, index) => {\n        return (\n          <p key={index}>{alert}</p>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ForgotPassword","import React, { useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nfunction ResetPassword({ setUser }) {\n  const [alerts, setAlerts] = useState([])\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  })\n  const params = useParams()\n  const history = useHistory()\n\n  function handleChange(e) {\n    setFormData({\n      ...formData, [e.target.name]: e.target.value\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    fetch(\"/api/reset\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: params[\"token\"],\n        email: formData.email,\n        password: formData.password,\n        password_confirmation: formData.password2\n      })\n    })\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((data) => {\n          setUser(data.user)\n          setAlerts(data.alerts)\n          setTimeout(() => {\n            history.push(\"/\")\n          }, 2000)\n        })\n      } else {\n        r.json().then((data) => setAlerts(data.errors))\n      }\n    })\n  }\n\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"reset-password-email\">Please enter your email:</label>\n        <input type=\"email\" id=\"reset-password-email\" value={formData.email} name=\"email\" onChange={handleChange} />\n        <label htmlFor=\"reset-password-password\">Please enter your password:</label>\n        <input type=\"password\" id=\"reset-password-password\" value={formData.password} name=\"password\" onChange={handleChange} />\n        <label htmlFor=\"reset-password-password2\">Please confirm your password:</label>\n        <input type=\"password\" id=\"reset-password-password2\" value={formData.password2} name=\"password2\" onChange={handleChange} />\n        <button type=\"submit\">Submit</button>\n        {alerts.map((alert, index) => {\n          return (\n            <p key={index}>{alert}</p>\n          )\n        })}\n      </form>\n    </div>\n  )\n}\n\nexport default ResetPassword","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Logout from \"./Logout\";\nimport NavBar from \"./NavBar\";\nimport Signup from \"./Signup\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Cart from \"./Carts\";\nimport ProductDetail from \"./ProductDetail\";\nimport Checkout from \"./Checkout\";\nimport OrderHistory from \"./OrderHistory\";\nimport { createTheme, Grid, Paper, ThemeProvider } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { blue } from \"@mui/material/colors\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport ResetPassword from \"./ResetPassword\";\n\nconst theme = createTheme({\n  palette: {\n    primary: blue,\n    // mode: \"dark\"\n    }\n});\n\nfunction App() {\n  const [user, setUser] = useState({})\n  const [products, setProducts] = useState([])\n  const productDetails = useSelector((state) => state.productDetails.entities)\n  const [search, setSearch] = useState(\"\")\n\n  useEffect(() => {\n    fetch(\"/api/me\")\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user))\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    fetch(`/api/search/${search}`)\n    .then((r) => {\n      if (r.ok) {\n        r.json().then((products) => setProducts(products))\n      }\n    })\n  }, [user, productDetails, search])\n\n  return (\n    <div>\n      <ThemeProvider theme={theme} >\n        <Paper elevation={3}>\n          <Grid container direction=\"column\" spacing={4}>\n            <Grid item >          \n              <NavBar user={user} setProducts={setProducts} search={search} setSearch={setSearch} />                  \n            </Grid>\n            <Grid item>\n              <Switch>\n                <Route path=\"/signup\">\n                  <Signup onLogin={setUser} />\n                </Route>\n                <Route path=\"/logout\">\n                  <Logout setUser={setUser} setProducts={setProducts} />\n                </Route>\n                <Route path=\"/login\">\n                  <Login onLogin={setUser} />\n                </Route>\n                <Route path=\"/carts\">\n                  <Cart />\n                </Route>\n                <Route path=\"/products/:productId\">\n                  <ProductDetail user={user} products={products} />\n                </Route>\n                <Route path=\"/checkout\">\n                  <Checkout userId={user.id} />\n                </Route>\n                <Route path=\"/orders\">\n                  <OrderHistory user={user} />\n                </Route>\n                <Route path=\"/forgot_password\" >\n                  <ForgotPassword />\n                </Route>\n                <Route path=\"/reset_password/:token\">\n                  <ResetPassword setUser={setUser} />\n                </Route>\n                <Route exact path=\"/\">\n                  <Home products={products} user={user} />\n                </Route>        \n              </Switch> \n            </Grid>         \n          </Grid>   \n        </Paper>        \n      </ThemeProvider>        \n    </div>\n  )\n}\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\nimport cartsReducer from \"./features/cartSlice\";\nimport productDetailsReducer from \"./features/productDetailSlice\";\n\nconst store = configureStore({\n  reducer: {\n    carts: cartsReducer,\n    productDetails: productDetailsReducer\n  }\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}